/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.InputStream;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author ducng
 */
public class MainForm extends javax.swing.JFrame {

    /** Creates new form MainForm */
    public MainForm() {
        initComponents();
        setLocation(400, 120);
        setResizable(false);
        setTitle("Quản Lý Thư Viện");
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                int x = JOptionPane.showConfirmDialog(null, "Bạn có muốn thoát?", "Xác nhận",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (x == JOptionPane.YES_OPTION) {
                    e.getWindow().dispose();
                }
            }
        });
    }
    private ConnectDatabase connectDatabase = new ConnectDatabase();


    private String userName;
    private JFileChooser fileDialog = new JFileChooser();
    public String getUserName() {
        return userName;
    }

    public void setUserName(String userName) {
        this.userName = userName;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cardLayout = new javax.swing.JLayeredPane();
        Home = new javax.swing.JPanel();
        HomeImage = new javax.swing.JLabel();
        JPthemSach = new javax.swing.JPanel();
        jTenSach = new javax.swing.JLabel();
        inputTenSach = new javax.swing.JTextField();
        jMaSach = new javax.swing.JLabel();
        inputMaSach = new javax.swing.JTextField();
        jMaKho = new javax.swing.JLabel();
        inputSoLuong = new javax.swing.JTextField();
        jTacGia = new javax.swing.JLabel();
        inputTacGia = new javax.swing.JTextField();
        jMaNXB = new javax.swing.JLabel();
        inputMaNXB = new javax.swing.JTextField();
        jMonLoai = new javax.swing.JLabel();
        inputMonLoai = new javax.swing.JTextField();
        ngonNgu = new javax.swing.JLabel();
        inputNgonNgu = new javax.swing.JTextField();
        soLuong = new javax.swing.JLabel();
        inputMaKho = new javax.swing.JTextField();
        gia = new javax.swing.JLabel();
        inputGia = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        luu = new javax.swing.JButton();
        thoat = new javax.swing.JButton();
        log = new javax.swing.JScrollPane();
        logThemSach = new javax.swing.JTextArea();
        JPxoaSach = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        bangSach = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        logXoa = new javax.swing.JTextArea();
        JPthemDG = new javax.swing.JPanel();
        hoten = new javax.swing.JLabel();
        inputHoTen = new javax.swing.JTextField();
        soThe = new javax.swing.JLabel();
        inputSoThe = new javax.swing.JTextField();
        ngaySinh = new javax.swing.JLabel();
        inputNgaySinh = new javax.swing.JTextField();
        gioiTinh = new javax.swing.JLabel();
        selectGioiTinh = new javax.swing.JComboBox<>();
        congViec = new javax.swing.JLabel();
        inputCongViec = new javax.swing.JTextField();
        cmnd = new javax.swing.JLabel();
        inputCMND = new javax.swing.JTextField();
        diaChi = new javax.swing.JLabel();
        inputDiaChi = new javax.swing.JTextField();
        hanDung = new javax.swing.JLabel();
        inputHanDung = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        buttomLuu = new javax.swing.JButton();
        buttomThoat = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        logThemDG = new javax.swing.JTextArea();
        jSDT = new javax.swing.JLabel();
        inputSDT = new javax.swing.JTextField();
        JPxoaDG = new javax.swing.JPanel();
        jDanhSachDocGia = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        dsDocGia = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jLogXoaDocGia = new javax.swing.JTextArea();
        buttomXoaDG = new javax.swing.JButton();
        buttomTHoatXoa = new javax.swing.JButton();
        JPdsSach = new javax.swing.JPanel();
        jLabelDanhSachSach = new javax.swing.JLabel();
        thoatDanhSachSach = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        bangSach1 = new javax.swing.JTable();
        JPdsDocGia = new javax.swing.JPanel();
        jDocGia = new javax.swing.JLabel();
        thoatDanhSachDG = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        dsDocGia1 = new javax.swing.JTable();
        JPdkMuon = new javax.swing.JPanel();
        jMaSoThe = new javax.swing.JLabel();
        jMaThuThu = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jHoaDonTam = new javax.swing.JTable();
        themSachM = new javax.swing.JButton();
        xoaSachM = new javax.swing.JButton();
        jTongSach = new javax.swing.JLabel();
        tongSachMuon = new javax.swing.JTextField();
        jTienCoc = new javax.swing.JLabel();
        coc = new javax.swing.JTextField();
        huyMuon = new javax.swing.JButton();
        jMaSach2 = new javax.swing.JLabel();
        inputMaSachMuon = new javax.swing.JTextField();
        jSoLuong2 = new javax.swing.JLabel();
        inputSoLuongMuon = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jTenThuThu = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jChonMaThe = new javax.swing.JComboBox<>();
        jTenDocGia = new javax.swing.JLabel();
        showTenDocGia = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jNgayMuon = new javax.swing.JLabel();
        inputNgayMuon = new javax.swing.JTextField();
        jDuKienTra = new javax.swing.JLabel();
        inputDuKien = new javax.swing.JTextField();
        jXuatHoaDon = new javax.swing.JButton();
        jLuu = new javax.swing.JButton();
        jThoat = new javax.swing.JLabel();
        nhapMaDon = new javax.swing.JTextField();
        JPdktraSach = new javax.swing.JPanel();
        jMaDonMuon = new javax.swing.JLabel();
        thoatTra = new javax.swing.JButton();
        luuTra = new javax.swing.JButton();
        selectMaDon = new javax.swing.JComboBox<>();
        jTenDocGia2 = new javax.swing.JLabel();
        showTenDocGIa = new javax.swing.JTextField();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTraTam = new javax.swing.JTable();
        jMaSach3 = new javax.swing.JLabel();
        selectMaSach = new javax.swing.JComboBox<>();
        jSoLuongTra = new javax.swing.JLabel();
        inputSoLuongTra = new javax.swing.JTextField();
        jNgayTra = new javax.swing.JLabel();
        inputNgayTra = new javax.swing.JTextField();
        jTraSach = new javax.swing.JButton();
        jSoLuong = new javax.swing.JLabel();
        jConLai = new javax.swing.JTextField();
        jThanhToan = new javax.swing.JLabel();
        jTratiencoc = new javax.swing.JTextField();
        jNo = new javax.swing.JLabel();
        inputNo = new javax.swing.JTextField();
        JPtimSach = new javax.swing.JPanel();
        jTenSach3 = new javax.swing.JLabel();
        timTenSach = new javax.swing.JTextField();
        jMaSach4 = new javax.swing.JLabel();
        timMaSach = new javax.swing.JTextField();
        jNgonNgu2 = new javax.swing.JLabel();
        timNgonNgu = new javax.swing.JTextField();
        jTacGia3 = new javax.swing.JLabel();
        timTacGia = new javax.swing.JTextField();
        jMonLoai2 = new javax.swing.JLabel();
        timMonLoai = new javax.swing.JTextField();
        jNhaXuatBan = new javax.swing.JLabel();
        timNXB = new javax.swing.JTextField();
        jMaKho2 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        timKiemSach = new javax.swing.JButton();
        huyTimSach = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        bangSach2 = new javax.swing.JTable();
        timMaKho = new javax.swing.JComboBox<>();
        JPthongTin = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        dsTKDocGia = new javax.swing.JTable();
        jHoTen3 = new javax.swing.JLabel();
        timHoTen = new javax.swing.JTextField();
        jCMND = new javax.swing.JLabel();
        timCMND = new javax.swing.JTextField();
        jGioiTinh = new javax.swing.JLabel();
        timGioiTinh = new javax.swing.JComboBox<>();
        jDiaChi = new javax.swing.JLabel();
        timDiaChi = new javax.swing.JTextField();
        jCongViec = new javax.swing.JLabel();
        timCongViec = new javax.swing.JTextField();
        jSDT2 = new javax.swing.JLabel();
        timDT = new javax.swing.JTextField();
        timkiem = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JSeparator();
        huyTimKiem = new javax.swing.JButton();
        JPtkSach = new javax.swing.JPanel();
        jThongKe = new javax.swing.JLabel();
        selectTinhTrang = new javax.swing.JComboBox<>();
        buttomThongke = new javax.swing.JButton();
        buttomXuatFile = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        jThongKeSach = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        JPtkDocGia = new javax.swing.JPanel();
        jThongKe2 = new javax.swing.JLabel();
        inputTinhTrang2 = new javax.swing.JComboBox<>();
        jbuttomThongKe = new javax.swing.JButton();
        jXuatFile = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        jThongKeDocGia = new javax.swing.JTable();
        jThoat2 = new javax.swing.JButton();
        jQuaHan = new javax.swing.JLabel();
        inputTinhTrangQuaHan = new javax.swing.JComboBox<>();
        menu = new javax.swing.JMenuBar();
        Update = new javax.swing.JMenu();
        capNhatKho = new javax.swing.JMenu();
        themSach = new javax.swing.JMenuItem();
        xoaSach = new javax.swing.JMenuItem();
        capNhatDocGia = new javax.swing.JMenu();
        themDocGia = new javax.swing.JMenuItem();
        xoaDocGia = new javax.swing.JMenuItem();
        MuonTra = new javax.swing.JMenu();
        danhSach = new javax.swing.JMenu();
        dsSach = new javax.swing.JMenuItem();
        dsDG = new javax.swing.JMenuItem();
        dkMuon = new javax.swing.JMenuItem();
        traSach = new javax.swing.JMenuItem();
        TimKiem = new javax.swing.JMenu();
        timSach = new javax.swing.JMenuItem();
        timDG = new javax.swing.JMenuItem();
        thongke = new javax.swing.JMenu();
        tkSach = new javax.swing.JMenuItem();
        tkDocGia = new javax.swing.JMenuItem();
        DangXuat = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(214, 217, 223));
        setSize(new java.awt.Dimension(800, 510));

        cardLayout.setPreferredSize(new java.awt.Dimension(800, 488));
        cardLayout.setLayout(new java.awt.CardLayout());

        Home.setBackground(new java.awt.Color(255, 255, 255));
        Home.setPreferredSize(new java.awt.Dimension(800, 510));
        Home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HomeMouseClicked(evt);
            }
        });
        Home.setLayout(null);
        HomeImage.setIcon(new ImageIcon("src\\main\\java\\image\\FileHome.jpg")); // NOI18N
        Home.add(HomeImage);
        HomeImage.setBounds(0, 0, 800, 510);

        cardLayout.add(Home, "card10");

        JPthemSach.setBackground(new java.awt.Color(214, 217, 223));
        JPthemSach.setPreferredSize(new java.awt.Dimension(800, 510));

        jTenSach.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTenSach.setText("Tên sách:");

        inputTenSach.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        inputTenSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTenSachActionPerformed(evt);
            }
        });

        jMaSach.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jMaSach.setText("Mã sách:");

        inputMaSach.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        inputMaSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputMaSachActionPerformed(evt);
            }
        });

        jMaKho.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jMaKho.setText("Mã kho:");

        inputSoLuong.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        inputSoLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputSoLuongActionPerformed(evt);
            }
        });

        jTacGia.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTacGia.setText("Tác giả:");

        inputTacGia.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        inputTacGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTacGiaActionPerformed(evt);
            }
        });

        jMaNXB.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jMaNXB.setText("Mã NXB");

        inputMaNXB.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        inputMaNXB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputMaNXBActionPerformed(evt);
            }
        });

        jMonLoai.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jMonLoai.setText("Môn loại");

        inputMonLoai.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        inputMonLoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputMonLoaiActionPerformed(evt);
            }
        });

        ngonNgu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ngonNgu.setText("Ngôn ngữ:");

        inputNgonNgu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        inputNgonNgu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputNgonNguActionPerformed(evt);
            }
        });

        soLuong.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        soLuong.setText("Số lượng:");

        inputMaKho.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        inputMaKho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputMaKhoActionPerformed(evt);
            }
        });

        gia.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        gia.setText("Giá:");

        inputGia.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        inputGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputGiaActionPerformed(evt);
            }
        });

        luu.setText("Lưu");
        luu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    luuActionPerformed(evt);
                } catch (SQLException throwables) {
                    throwables.printStackTrace();
                }
            }
        });

        thoat.setText("Thoát");
        thoat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                thoatMouseClicked(evt);
            }
        });
        thoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thoatActionPerformed(evt);
            }
        });

        logThemSach.setColumns(20);
        logThemSach.setRows(5);
        log.setViewportView(logThemSach);

        org.jdesktop.layout.GroupLayout JPthemSachLayout = new org.jdesktop.layout.GroupLayout(JPthemSach);
        JPthemSach.setLayout(JPthemSachLayout);
        JPthemSachLayout.setHorizontalGroup(
            JPthemSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jSeparator1)
            .add(JPthemSachLayout.createSequentialGroup()
                .addContainerGap()
                .add(JPthemSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(JPthemSachLayout.createSequentialGroup()
                        .add(log)
                        .addContainerGap())
                    .add(JPthemSachLayout.createSequentialGroup()
                        .add(JPthemSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(JPthemSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(JPthemSachLayout.createSequentialGroup()
                                    .add(jTenSach)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                    .add(inputTenSach, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 274, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(18, 18, 18)
                                    .add(jMaSach)
                                    .add(18, 18, 18)
                                    .add(inputMaSach, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 122, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(JPthemSachLayout.createSequentialGroup()
                                    .add(jMaNXB)
                                    .add(18, 18, 18)
                                    .add(inputMaNXB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 187, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(18, 18, 18)
                                    .add(jMaKho)
                                    .add(18, 18, 18)
                                    .add(inputMaKho)))
                            .add(JPthemSachLayout.createSequentialGroup()
                                .add(jMonLoai)
                                .add(18, 18, 18)
                                .add(inputMonLoai, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(ngonNgu)
                                .add(18, 18, 18)
                                .add(inputNgonNgu, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 93, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(gia, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(inputGia, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(JPthemSachLayout.createSequentialGroup()
                                .add(jTacGia)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(inputTacGia, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 287, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(soLuong)
                                .add(18, 18, 18)
                                .add(inputSoLuong, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(68, 68, 68)
                        .add(JPthemSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(thoat, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 79, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(luu, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 79, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(0, 79, Short.MAX_VALUE))))
        );
        JPthemSachLayout.setVerticalGroup(
            JPthemSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(JPthemSachLayout.createSequentialGroup()
                .add(11, 11, 11)
                .add(JPthemSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTenSach)
                    .add(inputTenSach, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jMaSach)
                    .add(inputMaSach, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(JPthemSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jMaNXB)
                    .add(JPthemSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(luu)
                        .add(inputMaNXB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jMaKho)
                        .add(inputMaKho, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(18, 18, 18)
                .add(JPthemSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTacGia)
                    .add(inputTacGia, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(soLuong)
                    .add(inputSoLuong, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(thoat))
                .add(20, 20, 20)
                .add(JPthemSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jMonLoai)
                    .add(inputMonLoai, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(ngonNgu)
                    .add(inputNgonNgu, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(gia)
                    .add(inputGia, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(log, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                .addContainerGap())
        );

        cardLayout.add(JPthemSach, "card2");

        JPxoaSach.setBackground(new java.awt.Color(214, 217, 223));
        JPxoaSach.setPreferredSize(new java.awt.Dimension(800, 488));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Thống kê sách:");

        bangSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Kho", "Mã Sách", "Tên Sách", "Tác giả", "NXB", "Số lượng", "Ngôn ngữ", "Môn loại", "Giá tiền"
            }
        ));
        jScrollPane1.setViewportView(bangSach);

        jButton1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton1.setText("Thoát");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton2.setText("Xoá");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        logXoa.setColumns(20);
        logXoa.setRows(5);
        jScrollPane2.setViewportView(logXoa);

        org.jdesktop.layout.GroupLayout JPxoaSachLayout = new org.jdesktop.layout.GroupLayout(JPxoaSach);
        JPxoaSach.setLayout(JPxoaSachLayout);
        JPxoaSachLayout.setHorizontalGroup(
            JPxoaSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(JPxoaSachLayout.createSequentialGroup()
                .addContainerGap()
                .add(JPxoaSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(JPxoaSachLayout.createSequentialGroup()
                        .add(JPxoaSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(JPxoaSachLayout.createSequentialGroup()
                                .add(jLabel1)
                                .add(0, 0, Short.MAX_VALUE))
                            .add(jScrollPane1))
                        .addContainerGap())
                    .add(JPxoaSachLayout.createSequentialGroup()
                        .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 520, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 47, Short.MAX_VALUE)
                        .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 73, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(39, 39, 39)
                        .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 73, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(38, 38, 38))))
        );
        JPxoaSachLayout.setVerticalGroup(
            JPxoaSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(JPxoaSachLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .add(18, 18, 18)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 344, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(JPxoaSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(JPxoaSachLayout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(JPxoaSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jButton2)
                            .add(jButton1))
                        .add(42, 42, 42))
                    .add(JPxoaSachLayout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jScrollPane2)
                        .addContainerGap())))
        );

        cardLayout.add(JPxoaSach, "card3");

        JPthemDG.setBackground(new java.awt.Color(214, 217, 223));
        JPthemDG.setPreferredSize(new java.awt.Dimension(800, 488));

        hoten.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        hoten.setText("Họ tên:");

        inputHoTen.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        soThe.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        soThe.setText("Số thẻ:");

        inputSoThe.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        ngaySinh.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ngaySinh.setText("Ngày sinh:");

        inputNgaySinh.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        gioiTinh.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        gioiTinh.setText("Giới tính:");

        selectGioiTinh.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        selectGioiTinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ", "Khác" }));

        congViec.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        congViec.setText("Công việc:");

        inputCongViec.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        cmnd.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cmnd.setText("CMND");

        inputCMND.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        diaChi.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        diaChi.setText("Địa chỉ:");

        inputDiaChi.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        hanDung.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        hanDung.setText("Hạn dùng thẻ:");

        inputHanDung.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        buttomLuu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        buttomLuu.setText("Lưu");
        buttomLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    buttomLuuActionPerformed(evt);
                } catch (SQLException throwables) {
                    throwables.printStackTrace();
                }
            }
        });

        buttomThoat.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        buttomThoat.setText("Thoát");
        buttomThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttomThoatActionPerformed(evt);
            }
        });

        logThemDG.setColumns(20);
        logThemDG.setRows(5);
        jScrollPane3.setViewportView(logThemDG);

        jSDT.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jSDT.setText("Số điện thoại");

        inputSDT.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        inputSDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputSDTActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout JPthemDGLayout = new org.jdesktop.layout.GroupLayout(JPthemDG);
        JPthemDG.setLayout(JPthemDGLayout);
        JPthemDGLayout.setHorizontalGroup(
            JPthemDGLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jSeparator2)
            .add(JPthemDGLayout.createSequentialGroup()
                .addContainerGap()
                .add(JPthemDGLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane3)
                    .add(JPthemDGLayout.createSequentialGroup()
                        .add(JPthemDGLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(JPthemDGLayout.createSequentialGroup()
                                .add(ngaySinh)
                                .add(18, 18, 18)
                                .add(inputNgaySinh, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(32, 32, 32)
                                .add(gioiTinh)
                                .add(18, 18, 18)
                                .add(selectGioiTinh, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(congViec)
                                .add(18, 18, 18)
                                .add(inputCongViec))
                            .add(JPthemDGLayout.createSequentialGroup()
                                .add(hoten)
                                .add(18, 18, 18)
                                .add(inputHoTen, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 229, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(soThe)
                                .add(18, 18, 18)
                                .add(inputSoThe, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 250, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(JPthemDGLayout.createSequentialGroup()
                                .add(JPthemDGLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(JPthemDGLayout.createSequentialGroup()
                                        .add(cmnd)
                                        .add(18, 18, 18)
                                        .add(inputCMND, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 194, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, JPthemDGLayout.createSequentialGroup()
                                        .add(hanDung, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 103, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(inputHanDung, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 139, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                .add(18, 18, 18)
                                .add(JPthemDGLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(JPthemDGLayout.createSequentialGroup()
                                        .add(diaChi, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 66, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(inputDiaChi))
                                    .add(JPthemDGLayout.createSequentialGroup()
                                        .add(jSDT)
                                        .add(18, 18, 18)
                                        .add(inputSDT)))))
                        .add(44, 44, 44)
                        .add(JPthemDGLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(buttomLuu, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 73, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(buttomThoat, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 73, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(0, 38, Short.MAX_VALUE)))
                .addContainerGap())
        );
        JPthemDGLayout.setVerticalGroup(
            JPthemDGLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(JPthemDGLayout.createSequentialGroup()
                .add(JPthemDGLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(JPthemDGLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(JPthemDGLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(hoten)
                            .add(inputHoTen, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(soThe)
                            .add(inputSoThe, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(JPthemDGLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(ngaySinh)
                            .add(inputNgaySinh, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(gioiTinh)
                            .add(selectGioiTinh, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(congViec)
                            .add(inputCongViec, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(JPthemDGLayout.createSequentialGroup()
                        .add(30, 30, 30)
                        .add(buttomLuu)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(JPthemDGLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(JPthemDGLayout.createSequentialGroup()
                        .add(JPthemDGLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(cmnd)
                            .add(inputCMND, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(diaChi)
                            .add(inputDiaChi, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, JPthemDGLayout.createSequentialGroup()
                        .add(buttomThoat)
                        .add(1, 1, 1)))
                .add(JPthemDGLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(hanDung)
                    .add(inputHanDung, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jSDT)
                    .add(inputSDT, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jSeparator2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                .addContainerGap())
        );

        cardLayout.add(JPthemDG, "card4");

        JPxoaDG.setBackground(new java.awt.Color(214, 217, 223));
        JPxoaDG.setPreferredSize(new java.awt.Dimension(800, 488));

        jDanhSachDocGia.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jDanhSachDocGia.setText("Danh sách độc giả:");

        dsDocGia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên độc giả", "Giới tính", "Số CMND", "Số thẻ", "Hạn dùng"
            }
        ));
        jScrollPane4.setViewportView(dsDocGia);

        jLogXoaDocGia.setColumns(20);
        jLogXoaDocGia.setRows(5);
        jScrollPane5.setViewportView(jLogXoaDocGia);

        buttomXoaDG.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        buttomXoaDG.setText("Xoá độc giả");
        buttomXoaDG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttomXoaDGActionPerformed(evt);
            }
        });

        buttomTHoatXoa.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        buttomTHoatXoa.setText("Thoát");
        buttomTHoatXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttomTHoatXoaActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout JPxoaDGLayout = new org.jdesktop.layout.GroupLayout(JPxoaDG);
        JPxoaDG.setLayout(JPxoaDGLayout);
        JPxoaDGLayout.setHorizontalGroup(
            JPxoaDGLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(JPxoaDGLayout.createSequentialGroup()
                .addContainerGap()
                .add(JPxoaDGLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane4)
                    .add(JPxoaDGLayout.createSequentialGroup()
                        .add(JPxoaDGLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jDanhSachDocGia)
                            .add(JPxoaDGLayout.createSequentialGroup()
                                .add(jScrollPane5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 507, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(26, 26, 26)
                                .add(buttomXoaDG, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 117, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(26, 26, 26)
                                .add(buttomTHoatXoa, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 73, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(0, 31, Short.MAX_VALUE)))
                .addContainerGap())
        );
        JPxoaDGLayout.setVerticalGroup(
            JPxoaDGLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(JPxoaDGLayout.createSequentialGroup()
                .addContainerGap()
                .add(jDanhSachDocGia)
                .add(JPxoaDGLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(JPxoaDGLayout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 340, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jScrollPane5)
                        .addContainerGap())
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, JPxoaDGLayout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(JPxoaDGLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(buttomXoaDG)
                            .add(buttomTHoatXoa))
                        .add(45, 45, 45))))
        );

        cardLayout.add(JPxoaDG, "card5");

        JPdsSach.setBackground(new java.awt.Color(214, 217, 223));
        JPdsSach.setPreferredSize(new java.awt.Dimension(800, 488));

        jLabelDanhSachSach.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelDanhSachSach.setText("Thống kê toàn bộ sách:");

        thoatDanhSachSach.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        thoatDanhSachSach.setText("Thoát");
        thoatDanhSachSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thoatDanhSachSachActionPerformed(evt);
            }
        });

        bangSach1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Kho", "Mã Sách", "Tên Sách", "Tác giả", "NXB", "Số lượng", "Ngôn ngữ", "Môn loại", "Giá tiền"
            }
        ));
        jScrollPane6.setViewportView(bangSach1);

        org.jdesktop.layout.GroupLayout JPdsSachLayout = new org.jdesktop.layout.GroupLayout(JPdsSach);
        JPdsSach.setLayout(JPdsSachLayout);
        JPdsSachLayout.setHorizontalGroup(
            JPdsSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(JPdsSachLayout.createSequentialGroup()
                .addContainerGap()
                .add(JPdsSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(JPdsSachLayout.createSequentialGroup()
                        .add(jLabelDanhSachSach)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(jScrollPane6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE))
                .addContainerGap())
            .add(org.jdesktop.layout.GroupLayout.TRAILING, JPdsSachLayout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(thoatDanhSachSach, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 73, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(56, 56, 56))
        );
        JPdsSachLayout.setVerticalGroup(
            JPdsSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(JPdsSachLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabelDanhSachSach)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 393, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(thoatDanhSachSach)
                .add(27, 27, 27))
        );

        cardLayout.add(JPdsSach, "card6");

        JPdsDocGia.setBackground(new java.awt.Color(214, 217, 223));
        JPdsDocGia.setPreferredSize(new java.awt.Dimension(800, 488));

        jDocGia.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jDocGia.setText("Thống kê độc giả:");

        thoatDanhSachDG.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        thoatDanhSachDG.setText("Thoát");
        thoatDanhSachDG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thoatDanhSachDGActionPerformed(evt);
            }
        });

        dsDocGia1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên độc giả", "Giới tính", "Số CMND", "Số thẻ", "Hạn dùng", "Số sách đã mượn"
            }
        ));
        jScrollPane7.setViewportView(dsDocGia1);

        org.jdesktop.layout.GroupLayout JPdsDocGiaLayout = new org.jdesktop.layout.GroupLayout(JPdsDocGia);
        JPdsDocGia.setLayout(JPdsDocGiaLayout);
        JPdsDocGiaLayout.setHorizontalGroup(
            JPdsDocGiaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(JPdsDocGiaLayout.createSequentialGroup()
                .addContainerGap()
                .add(JPdsDocGiaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(JPdsDocGiaLayout.createSequentialGroup()
                        .add(jScrollPane7)
                        .addContainerGap())
                    .add(JPdsDocGiaLayout.createSequentialGroup()
                        .add(jDocGia)
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, JPdsDocGiaLayout.createSequentialGroup()
                        .add(0, 661, Short.MAX_VALUE)
                        .add(thoatDanhSachDG, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 73, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(56, 56, 56))))
        );
        JPdsDocGiaLayout.setVerticalGroup(
            JPdsDocGiaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(JPdsDocGiaLayout.createSequentialGroup()
                .addContainerGap()
                .add(jDocGia)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jScrollPane7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 409, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(thoatDanhSachDG)
                .add(19, 19, 19))
        );

        cardLayout.add(JPdsDocGia, "card11");

        JPdkMuon.setBackground(new java.awt.Color(214, 217, 223));
        JPdkMuon.setPreferredSize(new java.awt.Dimension(800, 488));

        jMaSoThe.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jMaSoThe.setText("Mã số thẻ:");

        jMaThuThu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jMaThuThu.setText("Mã thủ thư:");

        jHoaDonTam.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sách", "Tên sách", "Tác giả", "Số lượng", "Ngày mượn", "Dự kiến trả"
            }
        ));
        jScrollPane8.setViewportView(jHoaDonTam);

        themSachM.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        themSachM.setText("Thêm sách");
        themSachM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themSachMActionPerformed(evt);
            }
        });

        xoaSachM.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        xoaSachM.setText("Xoá sách");
        xoaSachM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoaSachMActionPerformed(evt);
            }
        });

        jTongSach.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTongSach.setText("Tổng sách mượn");

        tongSachMuon.setEditable(false);
        tongSachMuon.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jTienCoc.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTienCoc.setText("Tiền cọc");

        coc.setEditable(false);
        coc.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        coc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cocActionPerformed(evt);
            }
        });

        huyMuon.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        huyMuon.setText("Thoát");
        huyMuon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                huyMuonActionPerformed(evt);
            }
        });

        jMaSach2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jMaSach2.setText("Mã sách");

        inputMaSachMuon.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jSoLuong2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jSoLuong2.setText("Số lượng");

        inputSoLuongMuon.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jTextField1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jTenThuThu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTenThuThu.setText("Tên thủ thư");

        jTextField2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jChonMaThe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jChonMaTheActionPerformed(evt);
            }
        });

        jTenDocGia.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTenDocGia.setText("Độc giả");

        showTenDocGia.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jNgayMuon.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jNgayMuon.setText("Ngày mượn");

        inputNgayMuon.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jDuKienTra.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jDuKienTra.setText("Dự kiến trả");

        inputDuKien.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jXuatHoaDon.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jXuatHoaDon.setText("Xuất hoá đơn");

        jLuu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLuu.setText("Lưu");
        jLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jLuuActionPerformed(evt);
                } catch (SQLException throwables) {
                    throwables.printStackTrace();
                }
            }
        });

        jThoat.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jThoat.setText("Mã đơn mượn:");

        nhapMaDon.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        org.jdesktop.layout.GroupLayout JPdkMuonLayout = new org.jdesktop.layout.GroupLayout(JPdkMuon);
        JPdkMuon.setLayout(JPdkMuonLayout);
        JPdkMuonLayout.setHorizontalGroup(
            JPdkMuonLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jSeparator3)
            .add(JPdkMuonLayout.createSequentialGroup()
                .addContainerGap()
                .add(JPdkMuonLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(JPdkMuonLayout.createSequentialGroup()
                        .add(JPdkMuonLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jScrollPane8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 599, Short.MAX_VALUE)
                            .add(JPdkMuonLayout.createSequentialGroup()
                                .add(jTongSach)
                                .add(18, 18, 18)
                                .add(tongSachMuon, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(27, 27, 27)
                                .add(jTienCoc)
                                .add(18, 18, 18)
                                .add(coc, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(0, 0, Short.MAX_VALUE)))
                        .add(18, 18, 18)
                        .add(JPdkMuonLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, JPdkMuonLayout.createSequentialGroup()
                                .add(JPdkMuonLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, inputDuKien)
                                    .add(jDuKienTra)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, inputNgayMuon)
                                    .add(jNgayMuon)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, JPdkMuonLayout.createSequentialGroup()
                                        .add(jMaSach2)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(inputMaSachMuon, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 85, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, JPdkMuonLayout.createSequentialGroup()
                                        .add(jSoLuong2)
                                        .add(18, 18, 18)
                                        .add(inputSoLuongMuon, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 85, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, JPdkMuonLayout.createSequentialGroup()
                                .add(JPdkMuonLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                    .add(xoaSachM, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(themSachM, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .add(43, 43, 43))))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, JPdkMuonLayout.createSequentialGroup()
                        .add(JPdkMuonLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(JPdkMuonLayout.createSequentialGroup()
                                .add(jMaThuThu)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(30, 30, 30)
                                .add(jTenThuThu))
                            .add(JPdkMuonLayout.createSequentialGroup()
                                .add(jMaSoThe)
                                .add(18, 18, 18)
                                .add(jChonMaThe, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 135, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(JPdkMuonLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(JPdkMuonLayout.createSequentialGroup()
                                .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 221, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jThoat)
                                .add(18, 18, 18)
                                .add(nhapMaDon))
                            .add(JPdkMuonLayout.createSequentialGroup()
                                .add(jTenDocGia, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(showTenDocGia)))
                        .addContainerGap())))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, JPdkMuonLayout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jXuatHoaDon)
                .add(18, 18, 18)
                .add(jLuu, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 79, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(17, 17, 17)
                .add(huyMuon, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 79, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(23, 23, 23))
        );
        JPdkMuonLayout.setVerticalGroup(
            JPdkMuonLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(JPdkMuonLayout.createSequentialGroup()
                .addContainerGap()
                .add(JPdkMuonLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(JPdkMuonLayout.createSequentialGroup()
                        .add(JPdkMuonLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jMaThuThu)
                            .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jTenThuThu)
                            .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jThoat)
                            .add(nhapMaDon, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(25, 25, 25)
                        .add(JPdkMuonLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jMaSoThe)
                            .add(jChonMaThe, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jTenDocGia)
                            .add(showTenDocGia, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jSeparator3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(JPdkMuonLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(JPdkMuonLayout.createSequentialGroup()
                                .add(JPdkMuonLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jMaSach2)
                                    .add(inputMaSachMuon, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(18, 18, 18)
                                .add(JPdkMuonLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jSoLuong2)
                                    .add(inputSoLuongMuon, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(18, 18, 18)
                                .add(jNgayMuon)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(inputNgayMuon, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jDuKienTra)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(inputDuKien, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(themSachM))
                            .add(jScrollPane8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 257, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(xoaSachM)
                        .add(46, 46, 46))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, JPdkMuonLayout.createSequentialGroup()
                        .add(JPdkMuonLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jTongSach)
                            .add(tongSachMuon, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jTienCoc)
                            .add(coc, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)))
                .add(JPdkMuonLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jXuatHoaDon)
                    .add(huyMuon)
                    .add(jLuu))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        cardLayout.add(JPdkMuon, "card6");

        JPdktraSach.setBackground(new java.awt.Color(214, 217, 223));
        JPdktraSach.setPreferredSize(new java.awt.Dimension(800, 488));

        jMaDonMuon.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jMaDonMuon.setText("Mã đơn mượn:");

        thoatTra.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        thoatTra.setText("Thoát");
        thoatTra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thoatTraActionPerformed(evt);
            }
        });

        luuTra.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        luuTra.setText("Lưu");
        luuTra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                luuTraActionPerformed(evt);
            }
        });

        selectMaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectMaDonActionPerformed(evt);
            }
        });

        jTenDocGia2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTenDocGia2.setText("Tên độc giả");

        showTenDocGIa.setEditable(false);
        showTenDocGIa.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jTraTam.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã Sách", "Tên sách", "Số lượng trả", "Ngày trả", "Quá hạn"
            }
        ));
        jScrollPane13.setViewportView(jTraTam);

        jMaSach3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jMaSach3.setText("Mã sách:");

        selectMaSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectMaSachActionPerformed(evt);
            }
        });

        jSoLuongTra.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jSoLuongTra.setText("Số lượng trả:");

        inputSoLuongTra.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jNgayTra.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jNgayTra.setText("Ngày trả:");

        inputNgayTra.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jTraSach.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTraSach.setText("Trả sách");
        jTraSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTraSachActionPerformed(evt);
            }
        });

        jSoLuong.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jSoLuong.setText("Số lượng:");

        jConLai.setEditable(false);
        jConLai.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jThanhToan.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jThanhToan.setText("Thanh toán:");

        jTratiencoc.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jNo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jNo.setText("Nợ:");

        inputNo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        org.jdesktop.layout.GroupLayout JPdktraSachLayout = new org.jdesktop.layout.GroupLayout(JPdktraSach);
        JPdktraSach.setLayout(JPdktraSachLayout);
        JPdktraSachLayout.setHorizontalGroup(
            JPdktraSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, JPdktraSachLayout.createSequentialGroup()
                .addContainerGap()
                .add(JPdktraSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(JPdktraSachLayout.createSequentialGroup()
                        .add(JPdktraSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, JPdktraSachLayout.createSequentialGroup()
                                .add(jMaDonMuon)
                                .add(18, 18, 18)
                                .add(selectMaDon, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(33, 33, 33)
                                .add(jTenDocGia2)
                                .add(18, 18, 18)
                                .add(showTenDocGIa, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 257, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 32, Short.MAX_VALUE))
                            .add(org.jdesktop.layout.GroupLayout.LEADING, JPdktraSachLayout.createSequentialGroup()
                                .add(0, 0, Short.MAX_VALUE)
                                .add(luuTra, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 79, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(29, 29, 29)
                        .add(thoatTra, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 79, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(JPdktraSachLayout.createSequentialGroup()
                        .add(jScrollPane13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 559, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(JPdktraSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(JPdktraSachLayout.createSequentialGroup()
                                .add(jMaSach3)
                                .add(18, 18, 18)
                                .add(selectMaSach, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .add(inputNgayTra)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, JPdktraSachLayout.createSequentialGroup()
                                .add(0, 0, Short.MAX_VALUE)
                                .add(jTraSach))
                            .add(JPdktraSachLayout.createSequentialGroup()
                                .add(jSoLuongTra)
                                .add(18, 18, 18)
                                .add(inputSoLuongTra))
                            .add(JPdktraSachLayout.createSequentialGroup()
                                .add(jSoLuong)
                                .add(39, 39, 39)
                                .add(jConLai))
                            .add(jTratiencoc)
                            .add(JPdktraSachLayout.createSequentialGroup()
                                .add(JPdktraSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jNgayTra)
                                    .add(jThanhToan))
                                .add(0, 0, Short.MAX_VALUE))
                            .add(JPdktraSachLayout.createSequentialGroup()
                                .add(jNo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(inputNo)))))
                .add(44, 44, 44))
        );
        JPdktraSachLayout.setVerticalGroup(
            JPdktraSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(JPdktraSachLayout.createSequentialGroup()
                .addContainerGap()
                .add(JPdktraSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jMaDonMuon)
                    .add(selectMaDon, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTenDocGia2)
                    .add(showTenDocGIa, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(32, 32, 32)
                .add(JPdktraSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jScrollPane13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 358, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(JPdktraSachLayout.createSequentialGroup()
                        .add(JPdktraSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jMaSach3)
                            .add(selectMaSach, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(JPdktraSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jSoLuong)
                            .add(jConLai, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(JPdktraSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jSoLuongTra)
                            .add(inputSoLuongTra, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jNgayTra)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(inputNgayTra, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jThanhToan)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jTratiencoc, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(JPdktraSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jNo)
                            .add(inputNo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jTraSach)
                        .add(35, 35, 35)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 18, Short.MAX_VALUE)
                .add(JPdktraSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(thoatTra)
                    .add(luuTra))
                .add(21, 21, 21))
        );

        cardLayout.add(JPdktraSach, "card12");

        JPtimSach.setBackground(new java.awt.Color(214, 217, 223));
        JPtimSach.setPreferredSize(new java.awt.Dimension(800, 488));

        jTenSach3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTenSach3.setText("Tên sách");

        timTenSach.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jMaSach4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jMaSach4.setText("Mã sách:");

        timMaSach.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jNgonNgu2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jNgonNgu2.setText("Ngôn ngữ");

        timNgonNgu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jTacGia3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTacGia3.setText("Tác giả:");

        timTacGia.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jMonLoai2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jMonLoai2.setText("Môn loại");

        timMonLoai.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jNhaXuatBan.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jNhaXuatBan.setText("Nhà xuất bản:");

        timNXB.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jMaKho2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jMaKho2.setText("Mã kho:");

        timKiemSach.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        timKiemSach.setText("Tìm kiếm");
        timKiemSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                timKiemSachMouseClicked(evt);
            }
        });
        timKiemSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timKiemSachActionPerformed(evt);
            }
        });

        huyTimSach.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        huyTimSach.setText("Thoát");
        huyTimSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                huyTimSachActionPerformed(evt);
            }
        });

        bangSach2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Kho", "Mã Sách", "Tên Sách", "Tác giả", "NXB", "Số lượng", "Ngôn ngữ", "Môn loại", "Giá tiền"
            }
        ));
        jScrollPane9.setViewportView(bangSach2);

        timMaKho.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        timMaKho.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "KH1", "KH2", "KH3" }));
        timMaKho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timMaKhoActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout JPtimSachLayout = new org.jdesktop.layout.GroupLayout(JPtimSach);
        JPtimSach.setLayout(JPtimSachLayout);
        JPtimSachLayout.setHorizontalGroup(
            JPtimSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jSeparator4)
            .add(JPtimSachLayout.createSequentialGroup()
                .addContainerGap()
                .add(JPtimSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(JPtimSachLayout.createSequentialGroup()
                        .add(jScrollPane9)
                        .addContainerGap())
                    .add(JPtimSachLayout.createSequentialGroup()
                        .add(jNhaXuatBan)
                        .add(18, 18, 18)
                        .add(timNXB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 194, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jMaKho2)
                        .add(18, 18, 18)
                        .add(timMaKho, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(JPtimSachLayout.createSequentialGroup()
                        .add(JPtimSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(JPtimSachLayout.createSequentialGroup()
                                .add(jNgonNgu2)
                                .add(18, 18, 18)
                                .add(timNgonNgu, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 160, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jTacGia3)
                                .add(18, 18, 18)
                                .add(timTacGia))
                            .add(JPtimSachLayout.createSequentialGroup()
                                .add(jTenSach3)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(timTenSach, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 300, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jMaSach4)))
                        .add(18, 18, 18)
                        .add(JPtimSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(timMaSach, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(JPtimSachLayout.createSequentialGroup()
                                .add(jMonLoai2)
                                .add(18, 18, 18)
                                .add(timMonLoai)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 32, Short.MAX_VALUE)
                        .add(JPtimSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(timKiemSach, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(huyTimSach, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .add(23, 23, 23))))
        );
        JPtimSachLayout.setVerticalGroup(
            JPtimSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(JPtimSachLayout.createSequentialGroup()
                .addContainerGap()
                .add(JPtimSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTenSach3)
                    .add(timTenSach, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jMaSach4)
                    .add(timMaSach, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(timKiemSach))
                .add(18, 18, 18)
                .add(JPtimSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jNgonNgu2)
                    .add(timNgonNgu, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTacGia3)
                    .add(timTacGia, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jMonLoai2)
                    .add(timMonLoai, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(huyTimSach))
                .add(18, 18, 18)
                .add(JPtimSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jNhaXuatBan)
                    .add(timNXB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jMaKho2)
                    .add(timMaKho, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                .addContainerGap())
        );

        cardLayout.add(JPtimSach, "card6");

        JPthongTin.setBackground(new java.awt.Color(214, 217, 223));
        JPthongTin.setPreferredSize(new java.awt.Dimension(800, 488));

        dsTKDocGia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Họ tên", "Số CMND", "Giới tính", "Số điện thoại", "Địa chỉ", "Hạn dùng thẻ"
            }
        ));
        jScrollPane10.setViewportView(dsTKDocGia);

        jHoTen3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jHoTen3.setText("Họ tên:");

        timHoTen.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jCMND.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCMND.setText("CMND");

        timCMND.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        timCMND.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timCMNDActionPerformed(evt);
            }
        });

        jGioiTinh.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jGioiTinh.setText("Giới tính:");

        timGioiTinh.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        timGioiTinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ", "Khác" }));

        jDiaChi.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jDiaChi.setText("Địa chỉ:");

        timDiaChi.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jCongViec.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCongViec.setText("Công việc:");

        timCongViec.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jSDT2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jSDT2.setText("Số điện thoại:");

        timDT.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        timDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timDTActionPerformed(evt);
            }
        });

        timkiem.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        timkiem.setText("Tìm kiếm");
        timkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timkiemActionPerformed(evt);
            }
        });

        huyTimKiem.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        huyTimKiem.setText("Thoát");
        huyTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                huyTimKiemActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout JPthongTinLayout = new org.jdesktop.layout.GroupLayout(JPthongTin);
        JPthongTin.setLayout(JPthongTinLayout);
        JPthongTinLayout.setHorizontalGroup(
            JPthongTinLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jSeparator5)
            .add(JPthongTinLayout.createSequentialGroup()
                .addContainerGap()
                .add(JPthongTinLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(JPthongTinLayout.createSequentialGroup()
                        .add(JPthongTinLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(JPthongTinLayout.createSequentialGroup()
                                .add(jHoTen3)
                                .add(18, 18, 18)
                                .add(timHoTen, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 282, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jCMND)
                                .add(18, 18, 18)
                                .add(timCMND, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 190, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(JPthongTinLayout.createSequentialGroup()
                                .add(jGioiTinh)
                                .add(18, 18, 18)
                                .add(timGioiTinh, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jDiaChi)
                                .add(18, 18, 18)
                                .add(timDiaChi))
                            .add(JPthongTinLayout.createSequentialGroup()
                                .add(jCongViec)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(timCongViec, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jSDT2)
                                .add(18, 18, 18)
                                .add(timDT)))
                        .add(46, 46, 46)
                        .add(JPthongTinLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(timkiem, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(huyTimKiem, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .add(0, 28, Short.MAX_VALUE))
                    .add(jScrollPane10))
                .addContainerGap())
        );
        JPthongTinLayout.setVerticalGroup(
            JPthongTinLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, JPthongTinLayout.createSequentialGroup()
                .add(JPthongTinLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(JPthongTinLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(JPthongTinLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jHoTen3)
                            .add(timHoTen, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jCMND)
                            .add(timCMND, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(JPthongTinLayout.createSequentialGroup()
                        .add(20, 20, 20)
                        .add(timkiem)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(JPthongTinLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jGioiTinh)
                    .add(timGioiTinh, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jDiaChi)
                    .add(timDiaChi, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(JPthongTinLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jCongViec)
                    .add(timCongViec, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jSDT2)
                    .add(timDT, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(huyTimKiem))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jSeparator5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane10, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                .addContainerGap())
        );

        cardLayout.add(JPthongTin, "card6");

        JPtkSach.setPreferredSize(new java.awt.Dimension(800, 488));

        jThongKe.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jThongKe.setText("Thống kê:");

        selectTinhTrang.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        selectTinhTrang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sách còn trong kho", "Sách đã cho mượn" }));

        buttomThongke.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        buttomThongke.setText("Thống kê");
        buttomThongke.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttomThongkeMouseClicked(evt);
            }
        });

        buttomXuatFile.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        buttomXuatFile.setText("Xuất file");
        buttomXuatFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttomXuatFileActionPerformed(evt);
            }
        });

        jThongKeSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã sách", "Tên sách", "Tác giả", "Nhà xuất bản", "Số lượng", "Kho"
            }
        ));
        jScrollPane11.setViewportView(jThongKeSach);

        jButton6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton6.setText("Thoát");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout JPtkSachLayout = new org.jdesktop.layout.GroupLayout(JPtkSach);
        JPtkSach.setLayout(JPtkSachLayout);
        JPtkSachLayout.setHorizontalGroup(
            JPtkSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(JPtkSachLayout.createSequentialGroup()
                .addContainerGap()
                .add(JPtkSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane11, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                    .add(JPtkSachLayout.createSequentialGroup()
                        .add(jThongKe)
                        .add(18, 18, 18)
                        .add(selectTinhTrang, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(269, 269, 269)
                        .add(buttomXuatFile)
                        .add(41, 41, 41)
                        .add(buttomThongke)
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .add(org.jdesktop.layout.GroupLayout.TRAILING, JPtkSachLayout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 73, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(33, 33, 33))
        );
        JPtkSachLayout.setVerticalGroup(
            JPtkSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(JPtkSachLayout.createSequentialGroup()
                .addContainerGap()
                .add(JPtkSachLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jThongKe)
                    .add(selectTinhTrang, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(buttomThongke)
                    .add(buttomXuatFile))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jScrollPane11, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jButton6)
                .addContainerGap())
        );

        cardLayout.add(JPtkSach, "card13");

        JPtkDocGia.setPreferredSize(new java.awt.Dimension(800, 488));

        jThongKe2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jThongKe2.setText("Thống kê:");

        inputTinhTrang2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        inputTinhTrang2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Có mượn", "Chưa mượn" }));
        inputTinhTrang2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTinhTrang2ActionPerformed(evt);
            }
        });

        jbuttomThongKe.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jbuttomThongKe.setText("Thống kê");

        jXuatFile.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jXuatFile.setText("Xuất file");
        jXuatFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXuatFileActionPerformed(evt);
            }
        });

        jThongKeDocGia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã độc giả", "Họ tên", "Giới tính", "CMND", "Ngày sinh", "SĐT", "Đơn phạt", "Tiền phạt"
            }
        ));
        jScrollPane12.setViewportView(jThongKeDocGia);

        jThoat2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jThoat2.setText("Thoát");
        jThoat2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jThoat2MouseClicked(evt);
            }
        });

        jQuaHan.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jQuaHan.setText("Quá hạn:");

        inputTinhTrangQuaHan.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        inputTinhTrangQuaHan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Có quá hạn", "Không Quá hạn" }));

        org.jdesktop.layout.GroupLayout JPtkDocGiaLayout = new org.jdesktop.layout.GroupLayout(JPtkDocGia);
        JPtkDocGia.setLayout(JPtkDocGiaLayout);
        JPtkDocGiaLayout.setHorizontalGroup(
            JPtkDocGiaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(JPtkDocGiaLayout.createSequentialGroup()
                .addContainerGap()
                .add(JPtkDocGiaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(JPtkDocGiaLayout.createSequentialGroup()
                        .add(jScrollPane12)
                        .addContainerGap())
                    .add(JPtkDocGiaLayout.createSequentialGroup()
                        .add(jThongKe2)
                        .add(18, 18, 18)
                        .add(inputTinhTrang2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(46, 46, 46)
                        .add(jQuaHan)
                        .add(18, 18, 18)
                        .add(inputTinhTrangQuaHan, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 101, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 118, Short.MAX_VALUE)
                        .add(jXuatFile)
                        .add(44, 44, 44)
                        .add(jbuttomThongKe)
                        .add(38, 38, 38))))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, JPtkDocGiaLayout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jThoat2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 73, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(28, 28, 28))
        );
        JPtkDocGiaLayout.setVerticalGroup(
            JPtkDocGiaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(JPtkDocGiaLayout.createSequentialGroup()
                .add(19, 19, 19)
                .add(JPtkDocGiaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jThongKe2)
                    .add(inputTinhTrang2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jbuttomThongKe)
                    .add(jXuatFile)
                    .add(jQuaHan)
                    .add(inputTinhTrangQuaHan, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jScrollPane12, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                .add(18, 18, 18)
                .add(jThoat2)
                .addContainerGap())
        );

        cardLayout.add(JPtkDocGia, "card14");

        Update.setText("Cập nhật");

        capNhatKho.setText("Cập nhật kho");

        themSach.setText("Thêm sách");
        themSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themSachActionPerformed(evt);
            }
        });
        capNhatKho.add(themSach);

        xoaSach.setText("Xoá sách");
        xoaSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoaSachActionPerformed(evt);
            }
        });
        capNhatKho.add(xoaSach);

        Update.add(capNhatKho);

        capNhatDocGia.setText("Cập nhật đọc giả");

        themDocGia.setText("Thêm độc giả");
        themDocGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themDocGiaActionPerformed(evt);
            }
        });
        capNhatDocGia.add(themDocGia);

        xoaDocGia.setText("Xoá độc giả");
        xoaDocGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoaDocGiaActionPerformed(evt);
            }
        });
        capNhatDocGia.add(xoaDocGia);

        Update.add(capNhatDocGia);

        menu.add(Update);

        MuonTra.setText("Mượn trả");

        danhSach.setText("Danh sách");

        dsSach.setText("Sách");
        dsSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dsSachMouseClicked(evt);
            }
        });
        dsSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dsSachActionPerformed(evt);
            }
        });
        danhSach.add(dsSach);

        dsDG.setText("Độc giả");
        dsDG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dsDGMouseClicked(evt);
            }
        });
        dsDG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dsDGActionPerformed(evt);
            }
        });
        danhSach.add(dsDG);

        MuonTra.add(danhSach);

        dkMuon.setText("Đăng kí mượn sách");
        dkMuon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dkMuonActionPerformed(evt);
            }
        });
        MuonTra.add(dkMuon);

        traSach.setText("Trả sách");
        traSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                traSachActionPerformed(evt);
            }
        });
        MuonTra.add(traSach);

        menu.add(MuonTra);

        TimKiem.setText("Tìm kiếm");

        timSach.setText("Tìm kiếm sách");
        timSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timSachActionPerformed(evt);
            }
        });
        TimKiem.add(timSach);

        timDG.setText("Tìm kiếm độc giả");
        timDG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timDGActionPerformed(evt);
            }
        });
        TimKiem.add(timDG);

        menu.add(TimKiem);

        thongke.setText("Thống kê");

        tkSach.setText("Thống kê sách");
        tkSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tkSachActionPerformed(evt);
            }
        });
        thongke.add(tkSach);

        tkDocGia.setText("Thống kê độc giả");
        tkDocGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tkDocGiaActionPerformed(evt);
            }
        });
        thongke.add(tkDocGia);

        menu.add(thongke);

        DangXuat.setText("Đăng xuất");
        DangXuat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DangXuatMouseClicked(evt);
            }
        });
        menu.add(DangXuat);

        setJMenuBar(menu);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(cardLayout, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(cardLayout, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void disableAllPanel() {
        Home.setVisible(false);
        JPthemSach.setVisible(false);
        JPxoaSach.setVisible(false);
        JPthemDG.setVisible(false);
        JPxoaDG.setVisible(false);
        JPdsSach.setVisible(false);
        JPdsDocGia.setVisible(false);
        JPdkMuon.setVisible(false);
        JPdktraSach.setVisible(false);
        JPthongTin.setVisible(false);
        JPtimSach.setVisible(false);
        JPtkDocGia.setVisible(false);
        JPtkSach.setVisible(false);
    }

    private void inputTenSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTenSachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputTenSachActionPerformed

    private void inputMonLoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputMonLoaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputMonLoaiActionPerformed

    private void HomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_HomeMouseClicked

    private void timCMNDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timCMNDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timCMNDActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int rowIndex = bangSach.getSelectedRow();
        int colIndex = 1;
        if (rowIndex != -1 && bangSach.getValueAt(rowIndex, colIndex) != null) {
            Object[] option = {"Có", "Không"};
            int n = JOptionPane.showOptionDialog(this, "Bạn chắc chắn muốn xoá?", "Xác nhận", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, option, option[0]);
            if (n == 0) {
                logXoa.append("Xoá thành công:\n");
                logXoa.append("Mã kho: " + bangSach.getValueAt(rowIndex, 0) + "\n");
                logXoa.append("Mã sách: " + bangSach.getValueAt(rowIndex, 1) + "\n");
                logXoa.append("Tên sách: " + bangSach.getValueAt(rowIndex, 2) + "\n");
                logXoa.append("Tách giả: " + bangSach.getValueAt(rowIndex, 3) + "\n");
                logXoa.append("Nhà xuất bản: " + bangSach.getValueAt(rowIndex, 4) + "\n");
                logXoa.append("Số lượng: " + bangSach.getValueAt(rowIndex, 5) + "\n");
                logXoa.append("Ngôn ngữ: " + bangSach.getValueAt(rowIndex, 6) + "\n");
                logXoa.append("Môn loại: " + bangSach.getValueAt(rowIndex, 7) + "\n");
                logXoa.append("Giá tiền: " + bangSach.getValueAt(rowIndex, 8) + " (VNĐ) \n");
                logXoa.append("-------------------------\n");
                connectDatabase.deleteDataSach((String) bangSach.getValueAt(rowIndex, colIndex));
                JOptionPane.showMessageDialog(this, "Áp dụng thành công!");
            }  else {
                logXoa.append("Huỷ thành công!\n");
                logXoa.append("-------------------------\n");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một mục!");
        }
        bangSach.setModel(new javax.swing.table.DefaultTableModel(
                connectDatabase.getDsSACH("") ,
                new String [] {
                        "Mã Kho", "Mã Sách", "Tên Sách", "Tác giả", "NXB", "Số lượng", "Ngôn ngữ", "Môn loại", "Giá tiền"
                }
        ));
    }//GEN-LAST:event_jButton2ActionPerformed

    private void buttomXoaDGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttomXoaDGActionPerformed
        // TODO add your handling code here:
        int rowIndex = dsDocGia.getSelectedRow();
        int colIndex = 3;
        if (rowIndex != -1 && dsDocGia.getValueAt(rowIndex, colIndex) != null) {
            Object[] option = {"Có", "Không"};
            int n = JOptionPane.showOptionDialog(this, "Bạn chắc chắn muốn xoá?", "Xác nhận", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, option, option[0]);
            if (n == 0) {
                jLogXoaDocGia.append("Xoá thành công:\n");
                jLogXoaDocGia.append("Tên độc giả: " + dsDocGia.getValueAt(rowIndex, 0) + "\n");
                jLogXoaDocGia.append("Giới tính: " + dsDocGia.getValueAt(rowIndex, 1) + "\n");
                jLogXoaDocGia.append("CMND: " + dsDocGia.getValueAt(rowIndex, 2) + "\n");
                jLogXoaDocGia.append("Số thẻ: " + dsDocGia.getValueAt(rowIndex, 3) + "\n");
                jLogXoaDocGia.append("Hạn dùng: " + dsDocGia.getValueAt(rowIndex, 4) + "\n");
                jLogXoaDocGia.append("----------------------------------------------------\n");
                connectDatabase.deleteDataDocGia((String) dsDocGia.getValueAt(rowIndex, colIndex));
                JOptionPane.showMessageDialog(this, "Áp dụng thành công!");
            } else {
                jLogXoaDocGia.append("Huỷ thành công!\n");
                jLogXoaDocGia.append("----------------------------------------------------\n");
            }
        }  else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một mục!");
        }
        dsDocGia.setModel(new javax.swing.table.DefaultTableModel(
                connectDatabase.getDocGia(),
                new String [] {
                        "Tên độc giả", "Giới tính", "Số CMND", "Số thẻ", "Hạn dùng"
                }
        ));
    }//GEN-LAST:event_buttomXoaDGActionPerformed

    private void thoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thoatActionPerformed
        // TODO add your handling code here:
        disableAllPanel();
        Home.setVisible(true);
    }//GEN-LAST:event_thoatActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        disableAllPanel();
        Home.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void buttomThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttomThoatActionPerformed
        // TODO add your handling code here:
        disableAllPanel();
        Home.setVisible(true);
    }//GEN-LAST:event_buttomThoatActionPerformed

    private void buttomTHoatXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttomTHoatXoaActionPerformed
        // TODO add your handling code here:
        disableAllPanel();
        Home.setVisible(true);
    }//GEN-LAST:event_buttomTHoatXoaActionPerformed

    private void thoatDanhSachSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thoatDanhSachSachActionPerformed
        // TODO add your handling code here:
        disableAllPanel();
        Home.setVisible(true);
    }//GEN-LAST:event_thoatDanhSachSachActionPerformed

    private void thoatDanhSachDGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thoatDanhSachDGActionPerformed
        // TODO add your handling code here:
        disableAllPanel();
        Home.setVisible(true);
    }//GEN-LAST:event_thoatDanhSachDGActionPerformed

    private void DangXuatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DangXuatMouseClicked
        // TODO add your handling code here:
        Object[] option = {"Yes", "No"};
        int n = JOptionPane.showOptionDialog(this, "Confirm select?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, option, option[0]);
        if (n == 0)
            this.dispose();

    }//GEN-LAST:event_DangXuatMouseClicked

    private void themSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themSachActionPerformed
        // TODO add your handling code here:
        disableAllPanel();
        JPthemSach.setVisible(true);
    }//GEN-LAST:event_themSachActionPerformed

    private void xoaSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoaSachActionPerformed
        // TODO add your handling code here:
        disableAllPanel();
        JPxoaSach.setVisible(true);
        logXoa.setEditable(true);
        bangSach.setModel(new javax.swing.table.DefaultTableModel(
                connectDatabase.getDsSACH("") ,
                new String [] {
                        "Mã Kho", "Mã Sách", "Tên Sách", "Tác giả", "NXB", "Số lượng", "Ngôn ngữ", "Môn loại", "Giá tiền"
                }
        ));
    }//GEN-LAST:event_xoaSachActionPerformed

    private void themDocGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themDocGiaActionPerformed
        // TODO add your handling code here:
        disableAllPanel();
        JPthemDG.setVisible(true);
    }//GEN-LAST:event_themDocGiaActionPerformed

    private void xoaDocGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoaDocGiaActionPerformed
        // TODO add your handling code here:
        disableAllPanel();
        JPxoaDG.setVisible(true);
        dsDocGia.setModel(new javax.swing.table.DefaultTableModel(
                connectDatabase.getDocGia(),
                new String [] {
                        "Tên độc giả", "Giới tính", "Số CMND", "Số thẻ", "Hạn dùng"
                }
        ));
    }//GEN-LAST:event_xoaDocGiaActionPerformed

    private void dsSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dsSachActionPerformed
        // TODO add your handling code here:
        disableAllPanel();
        JPdsSach.setVisible(true);
        bangSach1.setModel(new javax.swing.table.DefaultTableModel(
                connectDatabase.getDsSACH("") ,
                new String [] {
                        "Mã Kho", "Mã Sách", "Tên Sách", "Tác giả", "NXB", "Số lượng", "Ngôn ngữ", "Môn loại", "Giá tiền"
                }
        ));
    }//GEN-LAST:event_dsSachActionPerformed

    private void dsDGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dsDGActionPerformed
        // TODO add your handling code here:
        disableAllPanel();
        JPdsDocGia.setVisible(true);
        dsDocGia1.setModel(new javax.swing.table.DefaultTableModel(
                connectDatabase.getDocGiaMuon(),
                new String [] {
                        "Tên độc giả", "Giới tính", "Số CMND", "Số thẻ", "Hạn dùng", "Số sách đã mượn"
                }
        ));

    }//GEN-LAST:event_dsDGActionPerformed

    private void dkMuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dkMuonActionPerformed
        // TODO add your handling code here:
        disableAllPanel();
        JPdkMuon.setVisible(true);
        String[] temp = new String[50];
        temp = connectDatabase.getListMaDG();
        for (int i = 0; i < temp.length; i++) {
            if (temp[i] != null)
                jChonMaThe.addItem(temp[i]);
        }
        jTextField1.setText(connectDatabase.getMATHUTHU(userName));
        jTextField2.setText(connectDatabase.getTenThuThu(userName));
        jTextField1.setEnabled(false);
        jTextField2.setEnabled(false);
        showTenDocGia.setEnabled(false);
    }//GEN-LAST:event_dkMuonActionPerformed

    private void traSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_traSachActionPerformed
        String[] temp = new String[50];
        temp = connectDatabase.getListDonMuon();
        for (int i = 0; i < temp.length; i++) {
            if (temp[i] != null)
                selectMaDon.addItem(temp[i]);
        }
        // TODO add your handling code here:
        disableAllPanel();
        JPdktraSach.setVisible(true);
    }//GEN-LAST:event_traSachActionPerformed

    private void timSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timSachActionPerformed
        // TODO add your handling code here:
        disableAllPanel();
        JPtimSach.setVisible(true);
        String[] temp = new String[50];
        temp = connectDatabase.getListKho();
        for (int i = 0; i < temp.length; i++) {
            if (temp[i] != null)
                timMaKho.addItem(temp[i]);
        }
    }//GEN-LAST:event_timSachActionPerformed

    private void timDGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timDGActionPerformed
        // TODO add your handling code here:
        disableAllPanel();
        JPthongTin.setVisible(true);
    }//GEN-LAST:event_timDGActionPerformed

    private void huyTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_huyTimKiemActionPerformed
        // TODO add your handling code here:
        disableAllPanel();
        Home.setVisible(true);
    }//GEN-LAST:event_huyTimKiemActionPerformed

    private void huyTimSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_huyTimSachActionPerformed
        // TODO add your handling code here:
        disableAllPanel();
        Home.setVisible(true);
    }//GEN-LAST:event_huyTimSachActionPerformed

    private void thoatTraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thoatTraActionPerformed
        // TODO add your handling code here:
        disableAllPanel();
        Home.setVisible(true);
    }//GEN-LAST:event_thoatTraActionPerformed

    private void luuActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {//GEN-FIRST:event_luuActionPerformed
        // TODO add your handling code here:
        String TENSACH = inputTenSach.getText();
        String MASACH = inputMaSach.getText();
        String TACGIA = inputTacGia.getText();
        String MONLOAI = inputMonLoai.getText();
        String MANXB = inputMaNXB.getText();
        String GIATIEN = inputGia.getText();
        String SOLUONG = inputSoLuong.getText();
        String NGONNGU = inputNgonNgu.getText();
        String MAKHO = inputMaKho.getText();
        String sql = "insert into SACH(MASACH, TENSACH, TACGIA, MONLOAI, MANXB, GIATIEN, SOLUONG, NGONNGU, MAKHO) " +
                "values ('" + MASACH + "', N'" + TENSACH + "', N'" + TACGIA + "', N'" + MONLOAI + "', '" + MANXB + "', '" +
                GIATIEN + "', '" + SOLUONG + "', N'" + NGONNGU + "', '" + MAKHO + "')";
        Object[] option = {"Có", "Không"};
        int n = JOptionPane.showOptionDialog(this, "Bạn có muốn thêm sách?", "Xác nhận", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, option, option[0]);
        if (n == 0) {
            connectDatabase.updateData(sql);
            logThemSach.append("Thêm thành công:\n");
            logThemSach.append("Tên sách: " + TENSACH + "\n");
            logThemSach.append("Mã sách: " + MASACH + "\n");
            logThemSach.append("Tác giả: " + TACGIA + "\n");
            logThemSach.append("Môn loại: " + MONLOAI + "\n");
            logThemSach.append("Mã NXB: " + MANXB + "\n");
            logThemSach.append("Giá tiền: " + GIATIEN + " (VNĐ) \n");
            logThemSach.append("Số lượng: " + SOLUONG + "\n");
            logThemSach.append("Ngôn ngữ: " + NGONNGU + "\n");
            logThemSach.append("Mã kho: " + MAKHO + "\n");
            logThemSach.append("------------------------------------------");
            JOptionPane.showMessageDialog(this, "Áp dụng thành công!");
        } else  {
            logThemSach.append("Huỷ thành công!\n");
            logThemSach.append("------------------------------------------");
        }
    }//GEN-LAST:event_luuActionPerformed
    public String convertMMDDYY (String mmddyy) {
        String[] day = mmddyy.split("/");
        String ans;
        ans = day[2] + "/" + day[1] + "/" + day[0];
        return ans;
    }
    private void buttomLuuActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {//GEN-FIRST:event_buttomLuuActionPerformed
        String MATHE = inputSoThe.getText();
        String HOTEN = inputHoTen.getText();
        String NGAYSINH = inputNgaySinh.getText();
        String DIACHI = inputDiaChi.getText();
        String CMND = inputCMND.getText();
        String HANDUNG = inputHanDung.getText();
        String SDT = inputSDT.getText();
        String CONGVIEC = inputCongViec.getText();
        String GIOITINH = "";
        if (selectGioiTinh.getSelectedIndex() != -1) {
            GIOITINH += selectGioiTinh.getItemAt(selectGioiTinh.getSelectedIndex());
        }

        String sql = "insert into DOCGIA(MATHE, HOTEN, NGAYSINH, GIOITINH, DIACHI, CMND, HANDUNG, SDT, CONGVIEC)" +
                " values ('" + MATHE + "', N'" + HOTEN + "', '" + convertMMDDYY(NGAYSINH) + "', N'" + GIOITINH + "', N'" + DIACHI + "', '" +
                CMND + "', '" + convertMMDDYY(HANDUNG) + "', '" + SDT + "', N'" + CONGVIEC + "')";
        Object[] option = {"Có", "Không"};
        int n = JOptionPane.showOptionDialog(this, "Bạn có muốn thêm độc giả?", "Xác nhận", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, option, option[0]);
        if (n == 0) {
            connectDatabase.updateData(sql);
            logThemDG.append("Thêm thành công:\n");
            logThemDG.append("Họ tên: " + HOTEN + "\n");
            logThemDG.append("Ngày sinh: " + convertMMDDYY(NGAYSINH) + "\n");
            logThemDG.append("Giới tính: " + GIOITINH + "\n");
            logThemDG.append("Mã thẻ: " + MATHE + "\n");
            logThemDG.append("Địa chỉ: " + DIACHI + "\n");
            logThemDG.append("CMND: " + CMND + "\n");
            logThemDG.append("Hạn sử dụng: " + convertMMDDYY(HANDUNG) + "\n");
            logThemDG.append("SĐT: " + SDT + "\n");
            logThemDG.append("Công việc: " + CONGVIEC + "\n");
            logThemDG.append("------------------------------------------");
            JOptionPane.showMessageDialog(this, "Áp dụng thành công!");
        } else {
            logThemDG.append("Huỷ thành công!\n");
            logThemDG.append("------------------------------------------");
        }
    }//GEN-LAST:event_buttomLuuActionPerformed

    private void luuTraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_luuTraActionPerformed
        // TODO add your handling code here:
        Object[] option = {"Có", "Không"};
        int n = JOptionPane.showOptionDialog(this, "Áp dụng thay đổi?", "Xác nhận", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, option, option[0]);
        if (n == 0)
            JOptionPane.showMessageDialog(this, "Áp dụng thành công!");
    }//GEN-LAST:event_luuTraActionPerformed

    private void inputMaSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputMaSachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputMaSachActionPerformed

    private void inputMaNXBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputMaNXBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputMaNXBActionPerformed

    private void inputMaKhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputMaKhoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputMaKhoActionPerformed

    private void inputTacGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTacGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputTacGiaActionPerformed

    private void inputSoLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputSoLuongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputSoLuongActionPerformed

    private void inputNgonNguActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputNgonNguActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputNgonNguActionPerformed

    private void inputGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputGiaActionPerformed

    private void inputSDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputSDTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputSDTActionPerformed

    private void thoatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_thoatMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_thoatMouseClicked

    private void dsDGMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dsDGMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_dsDGMouseClicked

    private void huyMuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_huyMuonActionPerformed
        // TODO add your handling code here:
        disableAllPanel();
        Home.setVisible(true);
    }//GEN-LAST:event_huyMuonActionPerformed

    private void themSachMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themSachMActionPerformed
        // TODO add your handling code here:
        //
        DefaultTableModel model = (DefaultTableModel) jHoaDonTam.getModel();
        if (!inputNgayMuon.getText().equals("") && !inputDuKien.getText().equals("") && !inputMaSachMuon.getText().equals("") && !inputSoLuongMuon.getText().equals("")) {
            if (connectDatabase.getSingleData("select MASACH from SACH").contains(inputMaSachMuon.getText())) {
                int s = Integer.parseInt(connectDatabase.getSingleData("select SOLUONG from SACH where MASACH = '" + inputMaSachMuon.getText() + "'").replace(",", ""));
                int t = Integer.parseInt(inputSoLuongMuon.getText());
                if (t <= s) {
                    model.addRow(new Object[] {
                            inputMaSachMuon.getText(),
                            connectDatabase.getSingleData("select TENSACH from SACH where MASACH = '" + inputMaSachMuon.getText() + "'"),
                            connectDatabase.getSingleData("select TACGIA from SACH where MASACH = '" + inputMaSachMuon.getText() + "'"),
                            inputSoLuongMuon.getText(),
                            convertMMDDYY(inputNgayMuon.getText()),
                            convertMMDDYY(inputDuKien.getText())
                    });
                } else JOptionPane.showMessageDialog(this, "Số sách trong kho không đủ!");
            } else JOptionPane.showMessageDialog(this, "Sai! Nhập lại mã sách!");
        } else JOptionPane.showMessageDialog(this, "Vui lòng nhập đủ thông tin!");
        int numOfBook = 0, giatien = 0;
        String gia = new String("0");
        for (int i = 0; i < jHoaDonTam.getRowCount(); i++) {
            numOfBook += Integer.parseInt((String) jHoaDonTam.getValueAt(i, 3));
        }
        tongSachMuon.setText(String.valueOf(numOfBook));
    }//GEN-LAST:event_themSachMActionPerformed

    private void cocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cocActionPerformed

    private void jThoat2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jThoat2MouseClicked
        // TODO add your handling code here:
        disableAllPanel();
        Home.setVisible(true);
    }//GEN-LAST:event_jThoat2MouseClicked

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        // TODO add your handling code here:
        disableAllPanel();
        Home.setVisible(true);
    }//GEN-LAST:event_jButton6MouseClicked

    private void tkSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tkSachActionPerformed
        // TODO add your handling code here:
        disableAllPanel();
        JPtkSach.setVisible(true);

    }//GEN-LAST:event_tkSachActionPerformed

    private void tkDocGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tkDocGiaActionPerformed
        // TODO add your handling code here:
        disableAllPanel();
        JPtkDocGia.setVisible(true);

    }//GEN-LAST:event_tkDocGiaActionPerformed

    private void dsSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dsSachMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_dsSachMouseClicked

    private void timKiemSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timKiemSachMouseClicked
        // TODO add your handling code here:
        String tmp = "";
        tmp = tmp + " and MAKHO like '%" + timMaKho.getSelectedItem() + "%'";
        if (!timTenSach.getText().equals(""))
            tmp = tmp + " and TENSACH like N'" + timTenSach.getText() + "'";
        if (!timMaSach.getText().equals(""))
            tmp = tmp + " and MASACH like '" + timMaSach.getText() + "'";
        if (!timNgonNgu.getText().equals(""))
            tmp = tmp + " and NGONNGU like N'" + timNgonNgu.getText() + "'";
        if (!timTacGia.getText().equals(""))
            tmp = tmp + " and TACGIA like N'" + timTacGia.getText() + "'";
        if (!timMonLoai.getText().equals(""))
            tmp = tmp + " and MONLOAI like N'" + timMonLoai.getText() + "'";
        if (!timNXB.getText().equals(""))
            tmp = tmp + " and MANXB like '" + timNXB.getText() + "'";
        bangSach2.setModel(new javax.swing.table.DefaultTableModel(
                connectDatabase.getDsSACH(tmp) ,
                new String [] {
                        "Mã Kho", "Mã Sách", "Tên Sách", "Tác giả", "NXB", "Số lượng", "Ngôn ngữ", "Môn loại", "Giá tiền"
                }
        ));
    }//GEN-LAST:event_timKiemSachMouseClicked

    private void timKiemSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timKiemSachActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_timKiemSachActionPerformed

    private void jChonMaTheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChonMaTheActionPerformed
        // TODO add your handling code here:
        showTenDocGia.setText(connectDatabase.getTenDocGia((String) jChonMaThe.getSelectedItem()));
    }//GEN-LAST:event_jChonMaTheActionPerformed

    private void timkiemActionPerformed(ActionEvent evt) {//GEN-FIRST:event_timkiemActionPerformed
        // TODO add your handling code here:
        String temp = "";
        switch (timGioiTinh.getSelectedIndex()) {
            case 0:
                temp = temp + " GIOITINH like N'%Nam%'";
                break;
            case 1:
                temp = temp + " GIOITINH like N'%Nữ%'";
                break;
            case 2:
                temp = temp + " GIOITINH like N'%Khác%'";
                break;
        }
        if (!timHoTen.getText().equals(""))
            temp = temp + " and HOTEN like N'%" + timHoTen.getText() + "%'";
        if (!timCMND.getText().equals(""))
            temp = temp + " and CMND like '%" + timCMND.getText() +  "%'";
        if (!timDiaChi.getText().equals(""))
            temp = temp + " and DIACHI like N'%" + timDiaChi.getText() +  "%'";
        if (!timCongViec.getText().equals(""))
            temp = temp + " and CONGVIEC like N'%" + timCongViec.getText() +  "%'";
        if (!timDT.getText().equals(""))
            temp = temp + " and SDT like '%" + timDT.getText() +  "%'";
        if (!temp.equals(""))
            temp = "where " + temp;
        dsTKDocGia.setModel(new javax.swing.table.DefaultTableModel(
                connectDatabase.getTKDocGia(temp),
                new String [] {
                        "Họ tên", "Số CMND", "Giới tính", "Số điện thoại", "Địa chỉ", "Hạn dùng thẻ"
                }
        ));
    }//GEN-LAST:event_timkiemActionPerformed

    private void timDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timDTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timDTActionPerformed

    private void timMaKhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timMaKhoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timMaKhoActionPerformed

    private void buttomXuatFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttomXuatFileActionPerformed
        // TODO add your handling code here:
        int returnVal = fileDialog.showSaveDialog(null);
    }//GEN-LAST:event_buttomXuatFileActionPerformed

    private void jXuatFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXuatFileActionPerformed
        // TODO add your handling code here:
        int returnVal = fileDialog.showSaveDialog(null);
    }//GEN-LAST:event_jXuatFileActionPerformed

    private void xoaSachMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoaSachMActionPerformed
        // TODO add your handling code here:
        //làm mới
        int indexRow = jHoaDonTam.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jHoaDonTam.getModel();
        model.removeRow(indexRow);
    }//GEN-LAST:event_xoaSachMActionPerformed

    private void jLuuActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {/*
        GEN-FIRST:event_jButton11ActionPerformed
         TODO add your handling code here:
        */
        if (jHoaDonTam.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Lỗi, phiếu mượn hiện đang rỗng!");
        } else {
            Object[] option = {"Có", "Không"};
            int n = JOptionPane.showOptionDialog(this, "Xác nhận hoá đơn?", "Xác nhận", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, option, option[0]);
            if (n == 0) {
                String tmp = new String("insert into MUON (MAMUON, MATHE, NGAYMUON, DKTRA, MASACH, MATHUTHU, SOLUONG, TINHTRANG) values ");
                String str = new String("insert into DKMUON (MAMUON, TIENCOC) values ");
                for (int i = 0; i < jHoaDonTam.getRowCount(); i++) {
                    int soluong = Integer.parseInt(connectDatabase.getSingleData("select SOLUONG from SACH where MASACH = '" + jHoaDonTam.getValueAt(i, 0) + "'").replace(",", ""));
                    tmp += "('" + nhapMaDon.getText() + "','" + jChonMaThe.getSelectedItem() + "','" + jHoaDonTam.getValueAt(i, 4) + "','" + jHoaDonTam.getValueAt(i, 5) + "','" + jHoaDonTam.getValueAt(i, 0) + "','" + jTextField1.getText() + "','" + jHoaDonTam.getValueAt(i, 3) + "','" + 0 + "')";
                    str += "('" + nhapMaDon.getText() + "','" + coc.getText() + "')";
                    connectDatabase.updateData("Update SACH Set SOLUONG = " + (soluong - Integer.parseInt((String) jHoaDonTam.getValueAt(i, 3))) + " where MASACH = '" + jHoaDonTam.getValueAt(i, 0) + "'");
                    connectDatabase.updateData(tmp);
                    connectDatabase.updateData(str);
                }
                JOptionPane.showMessageDialog(this, "Lưu thành công!");
            }
        }
        //thêm câu lệnh insert
    }                                         
    private void selectMaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectMaDonActionPerformed
        // TODO add your handling code here:
        String str = (String) selectMaDon.getSelectedItem();
        showTenDocGIa.setText(connectDatabase.getSingleData("select top 1 HOTEN from DOCGIA, MUON where MUON.MATHE = DOCGIA.MATHE and MUON.MAMUON = '" + str +"'").replace(",",""));
        String[] temp = new String[50];
        temp = connectDatabase.getListSachMuon(str);
        for (int i = 0; i < temp.length; i++) {
            if (temp[i] != null)
                selectMaSach.addItem(temp[i]);
        }
    }//GEN-LAST:event_selectMaDonActionPerformed

    private void selectMaSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectMaSachActionPerformed
        // TODO add your handling code here:
        //lưu ý
        String soluong = connectDatabase.getSingleData("select SOLUONG from MUON where MAMUON = '" + selectMaDon.getSelectedItem() + "' and MASACH = '" + selectMaSach.getSelectedItem() + "'").replace(",", "");
        jConLai.setText(soluong);
        //System.out.println();
    }//GEN-LAST:event_selectMaSachActionPerformed

    private void jTraSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTraSachActionPerformed
        // TODO add your handling code here:
        String soluong = connectDatabase.getSingleData("select SOLUONG from MUON where MAMUON = '" + selectMaDon.getSelectedItem() + "' and MASACH = '" + selectMaSach.getSelectedItem() + "'").replace(",", "");
        //int a = Integer.parseInt(soluong);
        if (inputSoLuongTra.equals(""))
            jConLai.setText(String.valueOf(Integer.parseInt(soluong)));
         else {
             if (Integer.parseInt(inputSoLuongTra.getText()) <= Integer.parseInt(jConLai.getText())) {
                 jConLai.setText(String.valueOf(Integer.parseInt(soluong) - Integer.parseInt(inputSoLuongTra.getText())));
                 inputSoLuongTra.setText("");
             } else {
                 JOptionPane.showMessageDialog(this, "Số sách trả sai, vui lòng nhập lại!");
             }
        }
    }//GEN-LAST:event_jTraSachActionPerformed

    private void inputTinhTrang2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTinhTrang2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputTinhTrang2ActionPerformed

    private void buttomThongkeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttomThongkeMouseClicked
        // TODO add your handling code here:
        int i = selectTinhTrang.getSelectedIndex();
        if (i == 0) {
            jThongKeSach.setModel(new javax.swing.table.DefaultTableModel(
                    connectDatabase.getTkDsSach("select SACH.MASACH,\tTENSACH, SACH.TACGIA, NXB.TENNXB, SOLUONG, SACH.MAKHO\n" +
                            "from SACH\n" +
                            "join NXB on NXB.MANXB = SACH.MANXB", 0),
                    new String [] {
                            "Mã sách", "Tên sách", "Tác giả", "Nhà xuất bản", "Số lượng", "Kho"
                    }
            ));
        } else {
            jThongKeSach.setModel(new javax.swing.table.DefaultTableModel(
                    connectDatabase.getTkDsSach("select SACH.MASACH,\tTENSACH, SACH.TACGIA, NXB.TENNXB, TEMP.SL\n" +
                            "from SACH\n" +
                            "join NXB on NXB.MANXB = SACH.MANXB\n" +
                            "join (select MASACH, sum(SOLUONG) as SL from MUON group by MASACH) as TEMP on TEMP.MASACH = SACH.MASACH\n" +
                            "where SACH.MASACH in (select MASACH from MUON group by MASACH)", 1),
                    new String [] {
                            "Mã sách", "Tên sách", "Tác giả", "Nhà xuất bản", "Số lượng", "Kho"
                    }
            ));
        }
    }//GEN-LAST:event_buttomThongkeMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainForm mf = new MainForm();
                mf.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu DangXuat;
    private javax.swing.JPanel Home;
    private javax.swing.JLabel HomeImage;
    private javax.swing.JPanel JPdkMuon;
    private javax.swing.JPanel JPdktraSach;
    private javax.swing.JPanel JPdsDocGia;
    private javax.swing.JPanel JPdsSach;
    private javax.swing.JPanel JPthemDG;
    private javax.swing.JPanel JPthemSach;
    private javax.swing.JPanel JPthongTin;
    private javax.swing.JPanel JPtimSach;
    private javax.swing.JPanel JPtkDocGia;
    private javax.swing.JPanel JPtkSach;
    private javax.swing.JPanel JPxoaDG;
    private javax.swing.JPanel JPxoaSach;
    private javax.swing.JMenu MuonTra;
    private javax.swing.JMenu TimKiem;
    private javax.swing.JMenu Update;
    private javax.swing.JTable bangSach;
    private javax.swing.JTable bangSach1;
    private javax.swing.JTable bangSach2;
    private javax.swing.JButton buttomLuu;
    private javax.swing.JButton buttomTHoatXoa;
    private javax.swing.JButton buttomThoat;
    private javax.swing.JButton buttomThongke;
    private javax.swing.JButton buttomXoaDG;
    private javax.swing.JButton buttomXuatFile;
    private javax.swing.JMenu capNhatDocGia;
    private javax.swing.JMenu capNhatKho;
    private javax.swing.JLayeredPane cardLayout;
    private javax.swing.JLabel cmnd;
    private javax.swing.JTextField coc;
    private javax.swing.JLabel congViec;
    private javax.swing.JMenu danhSach;
    private javax.swing.JLabel diaChi;
    private javax.swing.JMenuItem dkMuon;
    private javax.swing.JMenuItem dsDG;
    private javax.swing.JTable dsDocGia;
    private javax.swing.JTable dsDocGia1;
    private javax.swing.JMenuItem dsSach;
    private javax.swing.JTable dsTKDocGia;
    private javax.swing.JLabel gia;
    private javax.swing.JLabel gioiTinh;
    private javax.swing.JLabel hanDung;
    private javax.swing.JLabel hoten;
    private javax.swing.JButton huyMuon;
    private javax.swing.JButton huyTimKiem;
    private javax.swing.JButton huyTimSach;
    private javax.swing.JTextField inputCMND;
    private javax.swing.JTextField inputCongViec;
    private javax.swing.JTextField inputDiaChi;
    private javax.swing.JTextField inputDuKien;
    private javax.swing.JTextField inputGia;
    private javax.swing.JTextField inputHanDung;
    private javax.swing.JTextField inputHoTen;
    private javax.swing.JTextField inputMaKho;
    private javax.swing.JTextField inputMaNXB;
    private javax.swing.JTextField inputMaSach;
    private javax.swing.JTextField inputMaSachMuon;
    private javax.swing.JTextField inputMonLoai;
    private javax.swing.JTextField inputNgayMuon;
    private javax.swing.JTextField inputNgaySinh;
    private javax.swing.JTextField inputNgayTra;
    private javax.swing.JTextField inputNgonNgu;
    private javax.swing.JTextField inputNo;
    private javax.swing.JTextField inputSDT;
    private javax.swing.JTextField inputSoLuong;
    private javax.swing.JTextField inputSoLuongMuon;
    private javax.swing.JTextField inputSoLuongTra;
    private javax.swing.JTextField inputSoThe;
    private javax.swing.JTextField inputTacGia;
    private javax.swing.JTextField inputTenSach;
    private javax.swing.JComboBox<String> inputTinhTrang2;
    private javax.swing.JComboBox<String> inputTinhTrangQuaHan;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jCMND;
    private javax.swing.JComboBox<String> jChonMaThe;
    private javax.swing.JTextField jConLai;
    private javax.swing.JLabel jCongViec;
    private javax.swing.JLabel jDanhSachDocGia;
    private javax.swing.JLabel jDiaChi;
    private javax.swing.JLabel jDocGia;
    private javax.swing.JLabel jDuKienTra;
    private javax.swing.JLabel jGioiTinh;
    private javax.swing.JLabel jHoTen3;
    private javax.swing.JTable jHoaDonTam;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelDanhSachSach;
    private javax.swing.JTextArea jLogXoaDocGia;
    private javax.swing.JButton jLuu;
    private javax.swing.JLabel jMaDonMuon;
    private javax.swing.JLabel jMaKho;
    private javax.swing.JLabel jMaKho2;
    private javax.swing.JLabel jMaNXB;
    private javax.swing.JLabel jMaSach;
    private javax.swing.JLabel jMaSach2;
    private javax.swing.JLabel jMaSach3;
    private javax.swing.JLabel jMaSach4;
    private javax.swing.JLabel jMaSoThe;
    private javax.swing.JLabel jMaThuThu;
    private javax.swing.JLabel jMonLoai;
    private javax.swing.JLabel jMonLoai2;
    private javax.swing.JLabel jNgayMuon;
    private javax.swing.JLabel jNgayTra;
    private javax.swing.JLabel jNgonNgu2;
    private javax.swing.JLabel jNhaXuatBan;
    private javax.swing.JLabel jNo;
    private javax.swing.JLabel jQuaHan;
    private javax.swing.JLabel jSDT;
    private javax.swing.JLabel jSDT2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JLabel jSoLuong;
    private javax.swing.JLabel jSoLuong2;
    private javax.swing.JLabel jSoLuongTra;
    private javax.swing.JLabel jTacGia;
    private javax.swing.JLabel jTacGia3;
    private javax.swing.JLabel jTenDocGia;
    private javax.swing.JLabel jTenDocGia2;
    private javax.swing.JLabel jTenSach;
    private javax.swing.JLabel jTenSach3;
    private javax.swing.JLabel jTenThuThu;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel jThanhToan;
    private javax.swing.JLabel jThoat;
    private javax.swing.JButton jThoat2;
    private javax.swing.JLabel jThongKe;
    private javax.swing.JLabel jThongKe2;
    private javax.swing.JTable jThongKeDocGia;
    private javax.swing.JTable jThongKeSach;
    private javax.swing.JLabel jTienCoc;
    private javax.swing.JLabel jTongSach;
    private javax.swing.JButton jTraSach;
    private javax.swing.JTable jTraTam;
    private javax.swing.JTextField jTratiencoc;
    private javax.swing.JButton jXuatFile;
    private javax.swing.JButton jXuatHoaDon;
    private javax.swing.JButton jbuttomThongKe;
    private javax.swing.JScrollPane log;
    private javax.swing.JTextArea logThemDG;
    private javax.swing.JTextArea logThemSach;
    private javax.swing.JTextArea logXoa;
    private javax.swing.JButton luu;
    private javax.swing.JButton luuTra;
    private javax.swing.JMenuBar menu;
    private javax.swing.JLabel ngaySinh;
    private javax.swing.JLabel ngonNgu;
    private javax.swing.JTextField nhapMaDon;
    private javax.swing.JComboBox<String> selectGioiTinh;
    private javax.swing.JComboBox<String> selectMaDon;
    private javax.swing.JComboBox<String> selectMaSach;
    private javax.swing.JComboBox<String> selectTinhTrang;
    private javax.swing.JTextField showTenDocGIa;
    private javax.swing.JTextField showTenDocGia;
    private javax.swing.JLabel soLuong;
    private javax.swing.JLabel soThe;
    private javax.swing.JMenuItem themDocGia;
    private javax.swing.JMenuItem themSach;
    private javax.swing.JButton themSachM;
    private javax.swing.JButton thoat;
    private javax.swing.JButton thoatDanhSachDG;
    private javax.swing.JButton thoatDanhSachSach;
    private javax.swing.JButton thoatTra;
    private javax.swing.JMenu thongke;
    private javax.swing.JTextField timCMND;
    private javax.swing.JTextField timCongViec;
    private javax.swing.JMenuItem timDG;
    private javax.swing.JTextField timDT;
    private javax.swing.JTextField timDiaChi;
    private javax.swing.JComboBox<String> timGioiTinh;
    private javax.swing.JTextField timHoTen;
    private javax.swing.JButton timKiemSach;
    private javax.swing.JComboBox<String> timMaKho;
    private javax.swing.JTextField timMaSach;
    private javax.swing.JTextField timMonLoai;
    private javax.swing.JTextField timNXB;
    private javax.swing.JTextField timNgonNgu;
    private javax.swing.JMenuItem timSach;
    private javax.swing.JTextField timTacGia;
    private javax.swing.JTextField timTenSach;
    private javax.swing.JButton timkiem;
    private javax.swing.JMenuItem tkDocGia;
    private javax.swing.JMenuItem tkSach;
    private javax.swing.JTextField tongSachMuon;
    private javax.swing.JMenuItem traSach;
    private javax.swing.JMenuItem xoaDocGia;
    private javax.swing.JMenuItem xoaSach;
    private javax.swing.JButton xoaSachM;
    // End of variables declaration//GEN-END:variables

}
